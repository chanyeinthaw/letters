{"version":3,"sources":["app/prompt-password/PromptPassword.module.css","letter/LetterContext.js","letter/navigator/Navigator.js","app/AppContext.js","letter/text-view/TextView.js","shared-hooks/use-password.js","shared-hooks/use-navigate.js","letter/Letter.js","shared-hooks/use-get-letter.js","app/prompt-password/PromptPassword.js","app/loading-bar/LoadingBar.js","editor/EditorContext.js","editor/colors/Colors.js","shared-hooks/use-get-colors.js","editor/options/Options.js","editor/Editor.js","shared-hooks/use-save-letter.js","app/App.js","serviceWorker.js","index.js","editor/options/Options.module.css","editor/colors/Colors.module.css","letter/navigator/Navigator.module.css","editor/Editor.module.css","letter/text-view/TextView.module.css","editor/text-alignment/TextAlignment.module.css","letter/navigator/arrow.svg","app/loading-bar/LoadingBar.module.css"],"names":["module","exports","defaultLetterViewState","letter","_id","styles","fontSize","backgroundColor","color","marginLeft","marginRight","textAlign","text","createdAt","hasNext","currentPage","LetterContext","createContext","useLetterViewContext","useContext","Navigator","loading","goNextPage","goPrevPage","hasPrev","prevText","nextText","getNavigationButtonClass","useCallback","control","cls","classes","NavigationButton","NavigationButtonDisabled","nothing","className","NavigatorContainer","src","arrow","alt","onClick","title","defaultAppState","AppContext","useAppContext","convertToMMNumber","number","numberMap","map","n","join","TextView","getStyles","_styles","colorStyles","opacity","getMMDate","date","day","Date","getDate","month","getMonth","year","getFullYear","style","DateText","Text","source","escapeHtml","usePassword","getPassword","cookies","document","cookie","split","key","value","setPassword","pw","useNavigate","href","location","useNavigateLogin","navigate","Letter","useState","state","setState","changeCurrentPage","pivot","updateLetterState","page","cancelTokenSource","http","setLoading","navigateLogin","a","url","process","cancelToken","token","validateStatus","status","params","limit","skip","headers","Authorization","res","letters","data","useGetLetter","getLetter","useEffect","then","cancel","useLetterViewEffects","JSON","parse","provide","Provider","PromptPassword","password","_setPassword","placeholder","type","onChange","e","target","LoadingBar","Meter","Progress","Component","defaultEditorState","colors","EditorContext","useEditorContext","Colors","onSelect","getColors","useGetColors","setColors","useOnMount","length","Array","fill","i","ColorCell","Color","Options","onSave","setDate","setStyle","updateBackgroundColor","updateTextColor","useFunctions","borderStyles","borderLeftColor","shouldDisabled","Title","Option","highlightCurrentDay","reverseMonthAndYearMenus","defaultValue","download","disabled","Editor","saveLetter","method","stringify","alert","reload","useSaveLetter","setText","TextViewWrapper","autoFocus","TextViewPreview","getTime","App","Routes","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97a59371.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PromptPassword\":\"PromptPassword_PromptPassword__39PNC\"};","import {createContext, useContext} from \"react\";\n\nexport const defaultLetterViewState = {\n    letter: {\n        _id: '',\n        styles: {\n            fontSize: 24,\n            backgroundColor: '#fff',\n            color: '#fff',\n            marginLeft: 52,\n            marginRight: 52,\n            textAlign: 'center'\n        },\n        text: '',\n        createdAt: 0\n    },\n    hasNext: false,\n    currentPage: 0\n}\n\nexport const LetterContext = createContext(null)\n\nexport const useLetterViewContext = () => useContext(LetterContext)\n","import React, {useCallback} from \"react\";\nimport classes from './Navigator.module.css'\nimport cls from 'clsx'\nimport arrow from './arrow.svg'\nimport {useLetterViewContext} from \"../LetterContext\";\n\n\nexport function Navigator() {\n    let {loading, hasNext, currentPage, goNextPage, goPrevPage} = useLetterViewContext()\n    const hasPrev = !loading && currentPage !== 0; hasNext = !loading && hasNext\n    const prevText = hasPrev ? \"နောက်သို့\" : ''\n    const nextText = hasNext ? \"ရှေ့သို့\" : ''\n\n    const getNavigationButtonClass = useCallback((control) => cls(classes.NavigationButton, {\n        [classes.NavigationButtonDisabled]: !control\n    }), [])\n\n    const nothing = useCallback(() => {}, [])\n\n    return (\n        <div className={classes.NavigatorContainer} >\n            <div className={classes.Navigator} >\n                <img src={arrow}\n                     alt=\"\"\n                     onClick={hasPrev ? goPrevPage : nothing}\n                     className={getNavigationButtonClass(hasPrev)}\n                     title={prevText}/>\n                <img src={arrow}\n                     onClick={hasNext ? goNextPage : nothing}\n                     alt=\"\"\n                     className={getNavigationButtonClass(hasNext)}\n                     title={nextText}/>\n            </div>\n        </div>\n    )\n}\n","import {createContext, useContext} from \"react\";\n\nexport const defaultAppState = {\n    loading: false\n}\n\nexport const AppContext = createContext()\n\nexport const useAppContext = () => useContext(AppContext)\n","import React, {useCallback} from \"react\";\nimport classes from './TextView.module.css'\nimport {Navigator} from \"../navigator/Navigator\";\nimport ReactMarkdown from \"react-markdown\";\nimport {useLetterViewContext} from \"../LetterContext\";\nimport {useAppContext} from \"../../app/AppContext\";\n\nfunction convertToMMNumber(number) {\n    const numberMap = ['၀', '၁', '၂', '၃', '၄', '၅', '၆', '၇', '၈', '၉', '၁၀']\n\n    return [...number+''].map(n => numberMap[n]).join('')\n}\n\nexport function TextView() {\n    const {letter} = useLetterViewContext()\n    const {loading} = useAppContext()\n\n    const getStyles = useCallback(() => {\n        const {styles} = letter\n        const _styles = {...styles}\n        const colorStyles = {\n            backgroundColor: styles.backgroundColor,\n            color: styles.color\n        }\n\n        const opacity = {opacity: loading ? 0 : '100%'}\n\n        delete _styles.backgroundColor\n        delete _styles.color\n\n        return {styles: {..._styles, ...opacity}, colorStyles, opacity}\n    }, [letter, loading])\n\n    const getMMDate = useCallback((date) => {\n        date = new Date(date)\n\n        const day = convertToMMNumber(date.getDate())\n        const month = convertToMMNumber(date.getMonth()+1)\n        const year = convertToMMNumber(date.getFullYear())\n\n        return `${day}ရက် ${month}လ ${year}`\n    }, [])\n\n    const {text, createdAt} = letter\n    const {styles, colorStyles, opacity} = getStyles()\n\n    return (\n        <div className={classes.TextView} style={colorStyles}>\n            <div className={classes.DateText} style={opacity}>\n                <span>{getMMDate(createdAt)}</span>\n            </div>\n            <div className={classes.Text} style={styles}>\n                <ReactMarkdown source={text} escapeHtml={false}/>\n            </div>\n            <Navigator />\n        </div>\n    )\n}\n\n","export function usePassword() {\n    return {\n        getPassword: () => {\n            const cookies = document.cookie.split('; ')\n\n            for(const cookie of cookies) {\n                const [key, value] = cookie.split('=')\n                if(key === 'password') return value\n            }\n\n            return ''\n        },\n\n        setPassword: (pw) => document.cookie = 'password=' + pw\n    }\n}\n","export function useNavigate() {\n    return href => document.location.href = href\n}\n\nexport function useNavigateLogin() {\n    const navigate = useNavigate()\n\n    return () => navigate('#/login')\n}\n","import React, {useEffect, useState} from 'react';\nimport {TextView} from \"./text-view/TextView\";\nimport {defaultLetterViewState, LetterContext} from \"./LetterContext\";\nimport {useAppContext} from \"../app/AppContext\";\nimport {useGetLetter} from \"../shared-hooks/use-get-letter\";\nimport {usePassword} from \"../shared-hooks/use-password\";\n\nexport default function Letter() {\n    const [state, setState] = useState(defaultLetterViewState)\n    const {loading} = useAppContext()\n\n    const updateLetterState = (data) => {\n        const {letter, hasNext} = data\n\n        if (!letter) return\n\n        letter.styles = JSON.parse(letter.styles)\n\n        setState({\n            ...state, letter, hasNext\n        })\n    }\n\n    const changeCurrentPage = (pivot) =>  setState({...state, currentPage: state.currentPage + pivot})\n\n    useLetterViewEffects(updateLetterState, state.currentPage)\n\n    const provide = {\n        letter: state.letter,\n        hasNext: state.hasNext,\n        currentPage: state.currentPage,\n\n        loading,\n\n        goNextPage: () => changeCurrentPage(+1),\n        goPrevPage: () => changeCurrentPage(-1)\n    }\n\n    return (\n        <LetterContext.Provider value={provide}>\n            {<TextView />}\n        </LetterContext.Provider>\n    )\n}\n\nfunction useLetterViewEffects(updateLetterState, page) {\n    const {getPassword} = usePassword()\n    const [getLetter, cancelTokenSource] = useGetLetter()\n\n    useEffect(() => {\n        if (getPassword() !== '') {\n            getLetter(page).then(updateLetterState)\n        }\n\n        return () => cancelTokenSource.cancel('Component unmount')\n    }, [page])\n}\n","import {useAppContext} from \"../app/AppContext\";\nimport * as http from \"axios\";\nimport {usePassword} from \"./use-password\";\nimport {useNavigateLogin} from \"./use-navigate\";\n\nexport function useGetLetter() {\n    const cancelTokenSource = http.CancelToken.source()\n    const {setLoading} = useAppContext()\n    const {getPassword, setPassword} = usePassword()\n    const navigateLogin = useNavigateLogin()\n\n    return [async (page) => {\n        const url = `${process.env.REACT_APP_API_URL}/letters`\n\n        setLoading(true)\n\n        const res = await http.get(url, {\n            cancelToken: cancelTokenSource.token,\n            validateStatus: (status) => status >= 200 && status <= 401,\n            params: {limit: 1, skip: page},\n            headers: {\n                Authorization: getPassword()\n            }\n        })\n\n        if (res.status === 401) {\n            setPassword('')\n            navigateLogin()\n            setLoading(false)\n\n            return {letter: null, hasNext: false}\n        }\n\n        const letters = res.data.letters || [null]\n\n        setLoading(false)\n\n        return {letter: letters[0], hasNext: res.data.hasNext}\n    }, cancelTokenSource]\n}\n","import React, {useState} from 'react'\nimport classes from './PromptPassword.module.css'\nimport PropTypes from 'prop-types'\nimport {usePassword} from \"../../shared-hooks/use-password\";\nimport {useNavigate} from \"../../shared-hooks/use-navigate\";\n\nexport function PromptPassword() {\n    const [password, _setPassword] = useState('')\n    const {setPassword} = usePassword()\n    const navigate = useNavigate()\n\n    const onBtnClick = () => {\n        setPassword(password)\n\n        navigate('#/')\n    }\n\n    return (\n        <div className={classes.PromptPassword}>\n            <input placeholder=\"Password\"\n                   type=\"password\"\n                   value={password}\n                   onChange={e => _setPassword(e.target.value)} />\n            <button onClick={onBtnClick}>Enter</button>\n        </div>\n    )\n}\n\nPromptPassword.propTypes = {\n    onEnter: PropTypes.func\n}\n","import React, {Component} from \"react\";\nimport classes from './LoadingBar.module.css'\n\nexport class LoadingBar extends Component {\n    render() {\n        return (\n            <div className={classes.Meter}>\n                <span className={classes.Progress} />\n            </div>\n        )\n    }\n}\n","import {createContext, useContext} from \"react\";\n\nexport const defaultEditorState = {\n    styles: {\n        backgroundColor: '#ffffff',\n        color: '#212121',\n    },\n    text: '',\n    createdAt: new Date(),\n    colors: []\n}\n\nexport const EditorContext = createContext()\n\nexport const useEditorContext = () => useContext(EditorContext)\n","import React, {useEffect, useState} from 'react'\nimport classes from './Colors.module.css'\nimport {useGetColors} from \"../../shared-hooks/use-get-colors\";\nimport {useEditorContext} from \"../EditorContext\";\n\nexport function Colors({onSelect}) {\n    const {colors} = useEditorContext()\n\n    useOnMount()\n\n    return (\n        <div className={classes.Colors}>\n            {\n                (colors.length === 0 ? Array(7).fill('#e1e1e1') : []).map((color, i) => (\n                    <div className={classes.ColorCell} key={i}>\n                        <div className={classes.Color} style={{backgroundColor: color}} onClick={() => {}}/>\n                    </div>\n                ))\n            }\n\n            {colors.map(color => (\n                <div className={classes.ColorCell} key={color}>\n                    <div className={classes.Color} style={{backgroundColor: color}} onClick={() => onSelect(color)}/>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nfunction useOnMount() {\n    const getColors = useGetColors()\n    const {setColors} = useEditorContext()\n\n    useEffect(() => {\n        getColors().then(colors => setColors(colors))\n    }, [])\n}\n","import {useAppContext} from \"../app/AppContext\";\nimport * as http from \"axios\";\nimport {useNavigateLogin} from \"./use-navigate\";\nimport {usePassword} from \"./use-password\";\n\nexport function useGetColors() {\n    const {setLoading} = useAppContext()\n    const {getPassword, setPassword} = usePassword()\n    const navigateLogin = useNavigateLogin()\n\n    return async () => {\n        const url = `${process.env.REACT_APP_API_URL}/colors`\n\n        setLoading(true)\n\n        const res = await http.get(url, {\n            validateStatus: (status) => status >= 200 && status <= 401,\n            headers: {\n                Authorization: getPassword()\n            }\n        })\n\n        if (res.status === 401) {\n            setLoading(false)\n            setPassword('')\n            navigateLogin()\n\n            return []\n        }\n\n        setLoading(false)\n\n        return res.data.colors\n    }\n}\n","import React, {useEffect} from 'react'\nimport classes from './Options.module.css'\nimport {useEditorContext} from \"../EditorContext\";\nimport {useGetColors} from \"../../shared-hooks/use-get-colors\";\nimport {Colors} from \"../colors/Colors\";\nimport {TextAlignment} from \"../text-alignment/TextAlignment\";\nimport {DatePicker} from '@blueprintjs/datetime'\nimport {Slider, Button} from \"@blueprintjs/core\";\nimport {useAppContext} from \"../../app/AppContext\";\n\nexport default function Options({onSave}) {\n    const {styles, date, setDate, text} = useEditorContext()\n    const {loading} = useAppContext()\n    const {updateBackgroundColor, updateTextColor} = useFunctions()\n    \n    const borderStyles = {borderLeftColor: styles.color}\n\n    const shouldDisabled = loading === true || text === ''\n\n    return (\n        <div className={classes.Options} style={borderStyles}>\n            <div className={classes.Title}>Options</div>\n\n            <div className={classes.Option}>\n                <p>Date</p>\n                <DatePicker\n                    highlightCurrentDay={true}\n                    reverseMonthAndYearMenus={true}\n                    onChange={setDate}\n                    defaultValue={date} />\n            </div>\n\n            <div className={classes.Option}>\n                <p>Background Color</p>\n                <Colors onSelect={updateBackgroundColor}/>\n            </div>\n\n            <div className={classes.Option}>\n                <p>Text Color</p>\n                <Colors onSelect={updateTextColor} download={false}/>\n            </div>\n\n            <Button disabled={shouldDisabled} onClick={onSave}>Save</Button>\n        </div>\n    )\n}\n\nfunction useFunctions() {\n    const {setStyle} = useEditorContext()\n\n    const updateBackgroundColor = color => setStyle('backgroundColor', color)\n\n    const updateTextColor = color => setStyle('color', color)\n\n    return {updateBackgroundColor, updateTextColor}\n}\n","import React, {createRef, useEffect, useRef, useState} from 'react'\nimport classes from './Editor.module.css'\nimport {defaultEditorState, EditorContext} from \"./EditorContext\";\nimport Options from \"./options/Options\";\nimport {useSaveLetter} from \"../shared-hooks/use-save-letter\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport default function Editor() {\n    const [state, setState] = useState(defaultEditorState)\n    const saveLetter = useSaveLetter()\n\n    const styles = {\n        backgroundColor: state.styles.backgroundColor,\n        color: state.styles.color\n    }\n\n    const setStyle = (key, value) => {\n        setState({\n            ...state,\n            styles: {\n                ...state.styles,\n                [key]: value\n            }\n        })\n    }\n\n    const setText = text => setState({...state, text})\n\n    const setDate = date => setState({...state, createdAt: date})\n\n    const setColors = colors => setState({...state, colors})\n\n    const provide = {\n        styles: state.styles,\n        text: state.text,\n        date: state.createdAt,\n        colors: state.colors,\n\n        setStyle, setText, setDate, setColors\n    }\n\n    const onSave = () => saveLetter(state.text, state.styles, state.createdAt.getTime())\n\n    return (\n        <EditorContext.Provider value={provide}>\n            <div className={classes.Editor} style={styles}>\n                <div className={classes.TextViewWrapper}>\n                    <textarea\n                        autoFocus={true}\n                        className={classes.TextView}\n                        style={styles}\n                        value={state.text}\n                        onChange={e => setText(e.target.value)} />\n                    <ReactMarkdown source={state.text} escapeHtml={false} className={classes.TextViewPreview}/>\n                </div>\n                <Options onSave={onSave}/>\n            </div>\n        </EditorContext.Provider>\n    )\n}\n","import {useAppContext} from \"../app/AppContext\";\nimport * as http from \"axios\";\nimport {usePassword} from \"./use-password\";\nimport {useNavigate, useNavigateLogin} from \"./use-navigate\";\n\nexport function useSaveLetter() {\n    const {setLoading} = useAppContext()\n    const {getPassword, setPassword} = usePassword()\n    const navigateLogin = useNavigateLogin()\n\n    return async (text, styles, date) => {\n        const url = `${process.env.REACT_APP_API_URL}/letters`\n\n        setLoading(true)\n\n        const res = await http.request({\n            method: 'POST',\n            url: url,\n            data: text,\n            validateStatus: (status) => status >= 200 && status <= 401,\n            headers: {\n                Authorization: getPassword(),\n                styles: JSON.stringify(styles),\n                createdAt: date,\n                'Content-Type': 'text/plain'\n            }\n        })\n\n        if (res.status === 401) {\n            setPassword('')\n            navigateLogin()\n            setLoading(false)\n        }\n\n        alert('Letter Saved !')\n        document.location.reload()\n    }\n}\n","import React, {useEffect, useState} from 'react';\nimport Letter from \"../letter/Letter\";\nimport {AppContext, defaultAppState} from \"./AppContext\";\nimport {PromptPassword} from \"./prompt-password/PromptPassword\";\nimport {LoadingBar} from \"./loading-bar/LoadingBar\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Editor from \"../editor/Editor\";\nimport {usePassword} from \"../shared-hooks/use-password\";\nimport {useNavigate} from \"../shared-hooks/use-navigate\";\n\nexport default function App() {\n    const [state, setState] = useState(defaultAppState)\n    const {getPassword} = usePassword()\n    const navigate = useNavigate()\n\n\n    const setLoading = (loading) => setState({...state, loading})\n\n    useEffect(() => {\n        if (getPassword() === '') navigate('#/login')\n    }, [])\n\n    const provide = {\n        ...state,\n\n        setLoading\n    }\n\n    return (\n        <AppContext.Provider value={provide}>\n            {state.loading ? <LoadingBar /> : null}\n            <Routes />\n        </AppContext.Provider>\n    )\n}\n\nfunction Routes() {\n    return (\n        <HashRouter>\n            <Route exact path=\"/\" component={Letter} />\n            <Route path=\"/letter\" component={Letter} />\n            <Route path=\"/login\" component={PromptPassword} />\n            <Route path=\"/editor\" component={Editor} />\n        </HashRouter>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Options\":\"Options_Options__AiE0X\",\"Option\":\"Options_Option__1HHV2\",\"Title\":\"Options_Title__69dAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Colors\":\"Colors_Colors__RegEJ\",\"ColorCell\":\"Colors_ColorCell__CUPMs\",\"Color\":\"Colors_Color__jhoaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigatorContainer\":\"Navigator_NavigatorContainer__1A4Fa\",\"Navigator\":\"Navigator_Navigator__kapp6\",\"NavigationButton\":\"Navigator_NavigationButton__1ADLL\",\"NavigationButtonDisabled\":\"Navigator_NavigationButtonDisabled__2y3BO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Editor\":\"Editor_Editor__1Anab\",\"TextViewWrapper\":\"Editor_TextViewWrapper__2U_PY\",\"TextViewPreview\":\"Editor_TextViewPreview__2bGv1\",\"TextView\":\"Editor_TextView__2Caav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextView\":\"TextView_TextView__18I0G\",\"DateText\":\"TextView_DateText__3Op1p\",\"Text\":\"TextView_Text__3dibn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextAlignmentContainer\":\"TextAlignment_TextAlignmentContainer__32VVi\",\"TextAlignmentItem\":\"TextAlignment_TextAlignmentItem__2ezi_\",\"TextAlignmentItemSelected\":\"TextAlignment_TextAlignmentItemSelected__3hYiv\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.d12b386f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Meter\":\"LoadingBar_Meter__3jHm6\",\"Progress\":\"LoadingBar_Progress__28D0g\",\"progressBar\":\"LoadingBar_progressBar__27V53\"};"],"sourceRoot":""}