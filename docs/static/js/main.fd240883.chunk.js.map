{"version":3,"sources":["letter-view/navigator/Navigator.module.css","letter-view/LetterViewContext.js","letter-view/navigator/Navigator.js","app/AppContext.js","letter-view/text-view/TextView.js","letter-view/LetterView.js","shared-hooks/use-get-letter.js","app/prompt-password/PromptPassword.js","app/loading-bar/LoadingBar.js","app/App.js","serviceWorker.js","index.js","letter-view/text-view/TextView.module.css","letter-view/navigator/arrow.svg","app/loading-bar/LoadingBar.module.css","app/prompt-password/PromptPassword.module.css"],"names":["module","exports","defaultLetterViewState","letter","_id","styles","fontSize","backgroundColor","color","marginLeft","marginRight","textAlign","text","createdAt","hasNext","currentPage","LetterViewContext","createContext","useLetterViewContext","useContext","Navigator","loading","goNextPage","goPrevPage","hasPrev","prevText","nextText","getNavigationButtonClass","useCallback","control","cls","classes","NavigationButton","NavigationButtonDisabled","nothing","className","NavigatorContainer","src","arrow","alt","onClick","title","defaultAppState","password","AppContext","useAppContext","convertToMMNumber","number","numberMap","map","n","join","TextView","getStyles","_styles","colorStyles","opacity","getMMDate","date","day","Date","getDate","month","getMonth","year","getFullYear","style","DateText","Text","source","escapeHtml","LetterView","useState","state","setState","changeCurrentPage","pivot","updateLetterState","page","cancelTokenSource","http","setPassword","setLoading","a","url","process","cancelToken","token","validateStatus","status","params","limit","skip","headers","Authorization","res","letters","data","useGetLetter","getLetter","useEffect","then","cancel","useLetterViewEffects","JSON","parse","provide","Provider","value","PromptPassword","_setPassword","placeholder","type","onChange","e","target","LoadingBar","Meter","Progress","Component","App","document","cookie","split","key","location","href","Routes","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd240883.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigatorContainer\":\"Navigator_NavigatorContainer__2JX9B\",\"Navigator\":\"Navigator_Navigator__tujGo\",\"NavigationButton\":\"Navigator_NavigationButton__1CxBq\",\"NavigationButtonDisabled\":\"Navigator_NavigationButtonDisabled__2ERCA\"};","import {createContext, useContext} from \"react\";\n\nexport const defaultLetterViewState = {\n    letter: {\n        _id: '',\n        styles: {\n            fontSize: 24,\n            backgroundColor: '#fff',\n            color: '#fff',\n            marginLeft: 52,\n            marginRight: 52,\n            textAlign: 'center'\n        },\n        text: '',\n        createdAt: 0\n    },\n    hasNext: false,\n    currentPage: 0\n}\n\nexport const LetterViewContext = createContext(null)\n\nexport const useLetterViewContext = () => useContext(LetterViewContext)\n","import React, {useCallback} from \"react\";\nimport classes from './Navigator.module.css'\nimport cls from 'clsx'\nimport arrow from './arrow.svg'\nimport {useLetterViewContext} from \"../LetterViewContext\";\n\n\nexport function Navigator() {\n    let {loading, hasNext, currentPage, goNextPage, goPrevPage} = useLetterViewContext()\n    const hasPrev = !loading && currentPage !== 0; hasNext = !loading && hasNext\n    const prevText = hasPrev ? \"နောက်သို့\" : ''\n    const nextText = hasNext ? \"ရှေ့သို့\" : ''\n\n    const getNavigationButtonClass = useCallback((control) => cls(classes.NavigationButton, {\n        [classes.NavigationButtonDisabled]: !control\n    }), [])\n\n    const nothing = useCallback(() => {}, [])\n\n    return (\n        <div className={classes.NavigatorContainer} >\n            <div className={classes.Navigator} >\n                <img src={arrow}\n                     alt=\"\"\n                     onClick={hasPrev ? goPrevPage : nothing}\n                     className={getNavigationButtonClass(hasPrev)}\n                     title={prevText}/>\n                <img src={arrow}\n                     onClick={hasNext ? goNextPage : nothing}\n                     alt=\"\"\n                     className={getNavigationButtonClass(hasNext)}\n                     title={nextText}/>\n            </div>\n        </div>\n    )\n}\n","import {createContext, useContext} from \"react\";\n\nexport const defaultAppState = {\n    password: '',\n    loading: false\n}\n\nexport const AppContext = createContext()\n\nexport const useAppContext = () => useContext(AppContext)\n","import React, {useCallback} from \"react\";\nimport classes from './TextView.module.css'\nimport {Navigator} from \"../navigator/Navigator\";\nimport ReactMarkdown from \"react-markdown\";\nimport {useLetterViewContext} from \"../LetterViewContext\";\nimport {useAppContext} from \"../../app/AppContext\";\n\nfunction convertToMMNumber(number) {\n    const numberMap = ['၀', '၁', '၂', '၃', '၄', '၅', '၆', '၇', '၈', '၉', '၁၀']\n\n    return [...number+''].map(n => numberMap[n]).join('')\n}\n\nexport function TextView() {\n    const {letter} = useLetterViewContext()\n    const {loading} = useAppContext()\n\n    const getStyles = useCallback(() => {\n        const {styles} = letter\n        const _styles = {...styles}\n        const colorStyles = {\n            backgroundColor: styles.backgroundColor,\n            color: styles.color\n        }\n\n        const opacity = {opacity: loading ? 0 : '100%'}\n\n        delete _styles.backgroundColor\n        delete _styles.color\n\n        return {styles: {..._styles, ...opacity}, colorStyles, opacity}\n    }, [letter, loading])\n\n    const getMMDate = useCallback((date) => {\n        date = new Date(date)\n\n        const day = convertToMMNumber(date.getDate())\n        const month = convertToMMNumber(date.getMonth()+1)\n        const year = convertToMMNumber(date.getFullYear())\n\n        return `${day}ရက် ${month}လ ${year}`\n    }, [])\n\n    const {text, createdAt} = letter\n    const {styles, colorStyles, opacity} = getStyles()\n\n    return (\n        <div className={classes.TextView} style={colorStyles}>\n            <div className={classes.DateText} style={opacity}>\n                <span>{getMMDate(createdAt)}</span>\n            </div>\n            <div className={classes.Text} style={styles}>\n                <ReactMarkdown source={text} escapeHtml={false}/>\n            </div>\n            <Navigator />\n        </div>\n    )\n}\n\n","import React, {useEffect, useState} from 'react';\nimport {TextView} from \"./text-view/TextView\";\nimport {defaultLetterViewState, LetterViewContext} from \"./LetterViewContext\";\nimport {useAppContext} from \"../app/AppContext\";\nimport {useGetLetter} from \"../shared-hooks/use-get-letter\";\nimport {CancelToken} from \"axios\";\n\nexport default function LetterView() {\n    const [state, setState] = useState(defaultLetterViewState)\n    const {loading} = useAppContext()\n\n    const updateLetterState = (data) => {\n        const {letter, hasNext} = data\n\n        if (!letter) return\n\n        letter.styles = JSON.parse(letter.styles)\n\n        setState({\n            ...state, letter, hasNext\n        })\n    }\n\n    const changeCurrentPage = (pivot) =>  setState({...state, currentPage: state.currentPage + pivot})\n\n    useLetterViewEffects(updateLetterState, state.currentPage)\n\n    const provide = {\n        letter: state.letter,\n        hasNext: state.hasNext,\n        currentPage: state.currentPage,\n\n        loading,\n\n        goNextPage: () => changeCurrentPage(+1),\n        goPrevPage: () => changeCurrentPage(-1)\n    }\n\n    return (\n        <LetterViewContext.Provider value={provide}>\n            {<TextView />}\n        </LetterViewContext.Provider>\n    )\n}\n\nfunction useLetterViewEffects(updateLetterState, page) {\n    const {password} = useAppContext()\n    const [getLetter, cancelTokenSource] = useGetLetter()\n\n    useEffect(() => {\n        if (password !== '') {\n            getLetter(page).then(updateLetterState)\n        }\n\n        return () => cancelTokenSource.cancel('Component unmount')\n    }, [password, page])\n}\n","import {useAppContext} from \"../app/AppContext\";\nimport * as http from \"axios\";\n\nexport function useGetLetter() {\n    const cancelTokenSource = http.CancelToken.source()\n    const {password, setPassword, setLoading} = useAppContext()\n\n    return [async (page) => {\n        const url = `${process.env.REACT_APP_API_URL}/letters`\n\n        setLoading(true)\n\n        const res = await http.get(url, {\n            cancelToken: cancelTokenSource.token,\n            validateStatus: (status) => status >= 200 && status <= 401,\n            params: {limit: 1, skip: page},\n            headers: {\n                Authorization: password\n            }\n        })\n\n        if (res.status === 401) {\n            setPassword('')\n            setLoading(false)\n\n            return {letter: null, hasNext: false}\n        }\n\n        const letters = res.data.letters || [null]\n\n        setLoading(false)\n\n        return {letter: letters[0], hasNext: res.data.hasNext}\n    }, cancelTokenSource]\n}\n","import React, {useState} from 'react'\nimport classes from './PromptPassword.module.css'\nimport PropTypes from 'prop-types'\nimport {useAppContext} from \"../AppContext\";\n\nexport function PromptPassword() {\n    const [password, _setPassword] = useState('')\n    const {setPassword} = useAppContext()\n\n\n    return (\n        <div className={classes.PromptPassword}>\n            <input placeholder=\"Password\"\n                   type=\"password\"\n                   value={password}\n                   onChange={e => _setPassword(e.target.value)} />\n            <button onClick={() => setPassword(password)}>Enter</button>\n        </div>\n    )\n}\n\nPromptPassword.propTypes = {\n    onEnter: PropTypes.func\n}\n","import React, {Component} from \"react\";\nimport classes from './LoadingBar.module.css'\n\nexport class LoadingBar extends Component {\n    render() {\n        return (\n            <div className={classes.Meter}>\n                <span className={classes.Progress} />\n            </div>\n        )\n    }\n}\n","import React, {useEffect, useState} from 'react';\nimport LetterView from \"../letter-view/LetterView\";\nimport {AppContext, defaultAppState} from \"./AppContext\";\nimport {PromptPassword} from \"./prompt-password/PromptPassword\";\nimport {LoadingBar} from \"./loading-bar/LoadingBar\";\nimport {HashRouter, Route, useHistory} from \"react-router-dom\";\n\nexport default function App() {\n    const [state, setState] = useState(defaultAppState)\n\n    const setPassword = (password) => {\n        setState({...state, password})\n        document.cookie = \"password=\" + password\n    }\n\n    const setLoading = (loading) => setState({...state, loading})\n\n    useEffect(() => {\n        document.cookie.split('; ').map(cookie => {\n            const [key, value] = cookie.split('=')\n\n            if(key === 'password') setPassword(value)\n            return []\n        })\n    }, [])\n\n    useEffect(() => {\n        if (state.password !== '') document.location.href = '#/letter-view'\n        else document.location.href = '#/login'\n    }, [state.password])\n\n    const provide = {\n        ...state,\n\n        setLoading,\n        setPassword\n    }\n\n    return (\n        <AppContext.Provider value={provide}>\n            {state.loading ? <LoadingBar /> : null}\n            <Routes />\n        </AppContext.Provider>\n    )\n}\n\nfunction Routes() {\n    return (\n        <HashRouter>\n            <Route path=\"/login\">\n                <PromptPassword />\n            </Route>\n            <Route path=\"/letter-view\">\n                <LetterView />\n            </Route>\n        </HashRouter>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextView\":\"TextView_TextView__sk-tp\",\"DateText\":\"TextView_DateText__3fBAh\",\"Text\":\"TextView_Text__2jw1O\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.d12b386f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Meter\":\"LoadingBar_Meter__3jHm6\",\"Progress\":\"LoadingBar_Progress__28D0g\",\"progressBar\":\"LoadingBar_progressBar__27V53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PromptPassword\":\"PromptPassword_PromptPassword__39PNC\"};"],"sourceRoot":""}